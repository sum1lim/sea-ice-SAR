#!/usr/bin/env python3
import argparse
from osgeo import gdal
from scipy import ndimage
from skimage import feature
from sea_ice_SAR.utils import decompose_filepath


def main(args):
    ds = gdal.Open(args.input)
    dir, filename, _ = decompose_filepath(args.input)
    tmp_ds = gdal.GetDriverByName("MEM").CreateCopy(
        f"{dir}/{filename}_{args.method}.tif", ds, 0
    )

    if type(args.bands) == str:
        args.bands = [args.bands]

    for band in args.bands:
        band_arr = ds.GetRasterBand(band).ReadAsArray().astype("float32")

        if args.method == "sobel":
            processed = ndimage.sobel(band_arr)
        if args.method == "canny":
            processed = feature.canny(band_arr)

        processed = processed.astype("float32")
        processed = 255 * (
            (processed - processed.min()) / (processed.max() - processed.min())
        )

        tmp_ds.AddBand()
        tmp_ds.GetRasterBand(ds.RasterCount + 1).WriteArray(processed)

    dst_ds = gdal.GetDriverByName("GTiff").CreateCopy(
        f"{dir}/{filename}_{args.method}.tif", tmp_ds, 0
    )
    dst_ds.SetGeoTransform(ds.GetGeoTransform())
    dst_ds.SetProjection(ds.GetProjection())
    tmp_ds.FlushCache()
    dst_ds.FlushCache()
    tmp_ds = None
    dst_ds = None


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "--input",
        nargs="+",
        type=str,
        help="Input file path",
    )
    parser.add_argument(
        "--method",
        type=str,
        help="Edge detection method ['SOBEL', 'canny']",
        choices=["SOBEL", "canny"],
    )
    parser.add_argument(
        "--bands",
        nargs="+",
        type=int,
        help="Band to perform edge detection on",
    )

    args = parser.parse_args()
    if type(args.input) == list:
        inputs = args.input[:]
        for ip in inputs:
            args.input = ip
            main(args)
    else:
        main(args)
